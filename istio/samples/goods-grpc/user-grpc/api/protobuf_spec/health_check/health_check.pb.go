// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/protobuf_spec/health_check/health_check.proto

/*
Package common_health_check is a generated protocol buffer package.

It is generated from these files:
	api/protobuf_spec/health_check/health_check.proto

It has these top-level messages:
	HealthCheckRequest
	HealthCheckResponse
*/
package common_health_check

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HealthCheckRequest struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *HealthCheckRequest) Reset()                    { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string            { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()               {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HealthCheckRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type HealthCheckResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *HealthCheckResponse) Reset()                    { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string            { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()               {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HealthCheckResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HealthCheckRequest)(nil), "common.health.check.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "common.health.check.HealthCheckResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HealthCheckService service

type HealthCheckServiceClient interface {
	// sends a health check request
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
}

type healthCheckServiceClient struct {
	cc *grpc.ClientConn
}

func NewHealthCheckServiceClient(cc *grpc.ClientConn) HealthCheckServiceClient {
	return &healthCheckServiceClient{cc}
}

func (c *healthCheckServiceClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := grpc.Invoke(ctx, "/common.health.check.HealthCheckService/HealthCheck", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HealthCheckService service

type HealthCheckServiceServer interface {
	// sends a health check request
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
}

func RegisterHealthCheckServiceServer(s *grpc.Server, srv HealthCheckServiceServer) {
	s.RegisterService(&_HealthCheckService_serviceDesc, srv)
}

func _HealthCheckService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthCheckServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.health.check.HealthCheckService/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthCheckServiceServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HealthCheckService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.health.check.HealthCheckService",
	HandlerType: (*HealthCheckServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _HealthCheckService_HealthCheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/protobuf_spec/health_check/health_check.proto",
}

func init() { proto.RegisterFile("api/protobuf_spec/health_check/health_check.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0x8b, 0x2f, 0x2e, 0x48, 0x4d, 0xd6, 0xcf, 0x48,
	0x4d, 0xcc, 0x29, 0xc9, 0x88, 0x4f, 0xce, 0x48, 0x4d, 0xce, 0x46, 0xe1, 0xe8, 0x81, 0xd5, 0x09,
	0x09, 0x27, 0xe7, 0xe7, 0xe6, 0xe6, 0xe7, 0xe9, 0x41, 0xa4, 0xf4, 0xc0, 0x52, 0x4a, 0x7a, 0x5c,
	0x42, 0x1e, 0x60, 0xbe, 0x33, 0x88, 0x1b, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0x24, 0xc1,
	0xc5, 0x9e, 0x9b, 0x5a, 0x5c, 0x9c, 0x98, 0x9e, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04,
	0xe3, 0x2a, 0xe9, 0x73, 0x09, 0xa3, 0xa8, 0x2f, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0xc5, 0xad, 0xc1,
	0xa8, 0x02, 0xc5, 0x82, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0xa1, 0x24, 0x2e, 0x6e, 0x24,
	0x51, 0x21, 0x75, 0x3d, 0x2c, 0x6e, 0xd3, 0xc3, 0x74, 0x98, 0x94, 0x06, 0x61, 0x85, 0x10, 0x17,
	0x29, 0x31, 0x24, 0xb1, 0x81, 0xbd, 0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x80, 0xcb, 0xc7,
	0xd3, 0x2b, 0x01, 0x00, 0x00,
}
