// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/protobuf_spec/stock/stock.proto

/*
Package stock is a generated protocol buffer package.

It is generated from these files:
	api/protobuf_spec/stock/stock.proto

It has these top-level messages:
	GetStockRequest
	GetStockResponse
*/
package stock

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetStockRequest struct {
	GoodID int64 `protobuf:"varint,1,opt,name=goodID" json:"goodID,omitempty"`
}

func (m *GetStockRequest) Reset()                    { *m = GetStockRequest{} }
func (m *GetStockRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStockRequest) ProtoMessage()               {}
func (*GetStockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetStockRequest) GetGoodID() int64 {
	if m != nil {
		return m.GoodID
	}
	return 0
}

type GetStockResponse struct {
	GoodID    int64 `protobuf:"varint,1,opt,name=goodID" json:"goodID,omitempty"`
	GoodStock int64 `protobuf:"varint,2,opt,name=goodStock" json:"goodStock,omitempty"`
}

func (m *GetStockResponse) Reset()                    { *m = GetStockResponse{} }
func (m *GetStockResponse) String() string            { return proto.CompactTextString(m) }
func (*GetStockResponse) ProtoMessage()               {}
func (*GetStockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetStockResponse) GetGoodID() int64 {
	if m != nil {
		return m.GoodID
	}
	return 0
}

func (m *GetStockResponse) GetGoodStock() int64 {
	if m != nil {
		return m.GoodStock
	}
	return 0
}

func init() {
	proto.RegisterType((*GetStockRequest)(nil), "stock.GetStockRequest")
	proto.RegisterType((*GetStockResponse)(nil), "stock.GetStockResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StockService service

type StockServiceClient interface {
	GetStock(ctx context.Context, in *GetStockRequest, opts ...grpc.CallOption) (*GetStockResponse, error)
}

type stockServiceClient struct {
	cc *grpc.ClientConn
}

func NewStockServiceClient(cc *grpc.ClientConn) StockServiceClient {
	return &stockServiceClient{cc}
}

func (c *stockServiceClient) GetStock(ctx context.Context, in *GetStockRequest, opts ...grpc.CallOption) (*GetStockResponse, error) {
	out := new(GetStockResponse)
	err := grpc.Invoke(ctx, "/stock.StockService/GetStock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StockService service

type StockServiceServer interface {
	GetStock(context.Context, *GetStockRequest) (*GetStockResponse, error)
}

func RegisterStockServiceServer(s *grpc.Server, srv StockServiceServer) {
	s.RegisterService(&_StockService_serviceDesc, srv)
}

func _StockService_GetStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServiceServer).GetStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock.StockService/GetStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServiceServer).GetStock(ctx, req.(*GetStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StockService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stock.StockService",
	HandlerType: (*StockServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStock",
			Handler:    _StockService_GetStock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/protobuf_spec/stock/stock.proto",
}

func init() { proto.RegisterFile("api/protobuf_spec/stock/stock.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4e, 0x2c, 0xc8, 0xd4,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0x8b, 0x2f, 0x2e, 0x48, 0x4d, 0xd6, 0x2f, 0x2e,
	0xc9, 0x4f, 0xce, 0x86, 0x90, 0x7a, 0x60, 0x19, 0x21, 0x56, 0x30, 0x47, 0x49, 0x93, 0x8b, 0xdf,
	0x3d, 0xb5, 0x24, 0x18, 0xc4, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe3, 0x62,
	0x4b, 0xcf, 0xcf, 0x4f, 0xf1, 0x74, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x82, 0xf2, 0x94,
	0x3c, 0xb8, 0x04, 0x10, 0x4a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x71, 0xa9, 0x15, 0x92, 0xe1,
	0xe2, 0x04, 0xb1, 0xc0, 0x8a, 0x25, 0x98, 0xc0, 0x52, 0x08, 0x01, 0x23, 0x5f, 0x2e, 0x1e, 0x30,
	0x23, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x96, 0x8b, 0x03, 0x66, 0xb2, 0x90, 0x98,
	0x1e, 0xc4, 0x95, 0x68, 0xae, 0x92, 0x12, 0xc7, 0x10, 0x87, 0x38, 0x41, 0x89, 0x21, 0x89, 0x0d,
	0xec, 0x23, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x84, 0x64, 0x62, 0x92, 0xf8, 0x00, 0x00,
	0x00,
}
